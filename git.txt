初始化一个Git仓库，使用git init命令

添加文件到Git仓库，分两步：
	使用命令git add <file>，注意，可反复多次使用，添加多个文件；
	使用命令git commit -m <message>，完成。

要随时掌握工作区的状态，使用git status命令

如果git status告诉你有文件被修改过，用git diff可以查看修改内容

HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id (HEAD表示当前版本 HEAD^表示上一个版本 HEAD^^上上个版本 HEAD~100 上一百个版本)

穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本（git log --pretty=oneline 只显示一行提交记录）

要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库

git rm  <file>用于删除一个文件

Git远程仓库
第1步：创建SSH Key。
在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：
	ssh-keygen -t rsa -C "youremail@example.com"
第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：
然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容：

添加远程库
	GitHub创建一个Git仓库 “Create a new repo”
本地仓库与之关联 添加后 远程库的名字就是origin，这是Git默认的叫法，也可以改成别的
	git remote add origin https://github.com/Mr17-th/GitTest.git
把本地库的所有内容推送到远程库上 (-u 推送master分支的所有内容)
	 git push -u origin master

从远程库克隆
	git clone git@github.com:Mr17-th/GitClone.git
GitHub给出的地址不止一个，还可以用https://github.com/Mr17-th/GitClone.git
实际上，Git支持多种协议，默认的git://使用ssh，但也可以使用https等其他协议。
Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。https还有个最大的麻烦是每次推送都必须输入口令，但是在某些只开放http端口的公司内部就无法使用ssh协议而只能用https。
